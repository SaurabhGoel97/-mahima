// Quick Sort is a method to sort an array of elements with lesser time complexity,ie, O(n*logn)

public class QuickSort {

	public static void quickSort(int[] input) {

		quickSort(input, 0, input.length - 1);
	}

	public static int partition(int[] input, int start, int end) {
		int pivot = input[start];
		int count = 0;
		for (int k = start + 1; k <= end; k++) {
			if (input[k] <= pivot) {
				count++;
			}
		}

		int temp = input[start];
		input[start] = input[start + count];
		input[start + count] = temp;

		for (int i = start, j = end; i < start + count;) {
			if (input[i] <= pivot)
				i++;
			else if (input[j] > pivot)
				j--;
			else if (input[i] > pivot && input[j] <= pivot) {
				int temp1 = input[j];
				input[j] = input[i];
				input[i] = temp1;
			}
		}
		return count + start;

	}

	public static void quickSort(int[] input, int start, int end) {

		if (start >= end)
			return;
		else {
			int count = partition(input, start, end);
			quickSort(input, start, count - 1);
			quickSort(input, count + 1, end);
		}

	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int arr[] = { 2, 5, 1, 7, 4, 9, 0 };
		quickSort(arr);
		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}

	}

}
